[[maven-properties]]

////
a=&#225; e=&#233; i=&#237; o=&#243; u=&#250;

A=&#193; E=&#201; I=&#205; O=&#211; U=&#218;

n=&#241; N=&#209;
////

== PROPERTIES

* The definition of properties in Maven is as follows:

[source, XML]
[subs="verbatim,attributes"]
----
<properties>
   <dbDriver>postgres</dbDriver>
</properties>
----

In our example, postgres is the default value.

* Maven properties are key/value pairs defined in POM that allow defining constants in your build, keeping the syntax clean and readable.
  You can use properties to (also partially) define the values of all POM elements: except the POM coordinates (groupId, artifactId, type, version) and a few others.
  For example, in multi module projects, you cannot use properties for defining parent coordinates or module name exceptions.

* Property values can be passed by the mvn command by appending �D<property name>=<property value> at the end of the line; this feature allows you to provide different build options that are easy to use. For example,
  if your application supports different JDBC drivers, you may want to provide the option to run the build appending �DdbDriver=mysql.

* Property resolution is as simple as writing ${property name}; in our example, it would be ${dbDriver} (properties are case-sensitive).

* The Super POM defines a list ( available at http://www.sonatype.com/books/mvnref-book/reference/resource-filtering-sect-properties.html ) of properties that you can use in your POM; the most used can be divided into the following:

** POM information: All the coordinates of the current project can be accessed via property, including all the Maven Plugin configurations

** Environment properties: Many environment variables, such as the hostname or the JAVA_HOME

* Our example will be as follows:

[source, XML]
[subs="verbatim,attributes"]
----
<dependencies>
    <dependency>
        <groupId>book.simasoft.co</groupId>
        <artifactId>my-persistence-${dbDriver}</artifactId>
        <version>4.0.0-SNAPSHOT</version>
    </dependency>
</dependencies>
----

=== Maven Properties:

* http://books.sonatype.com/mvnref-book/reference/resource-filtering-sect-properties.html[Maven Properties]

* http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide[MavenPropertiesGuide]

